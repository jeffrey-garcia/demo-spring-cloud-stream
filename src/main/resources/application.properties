# Specify a port for local testing to avoid collision with 8080
server.port=8081

# Enable live restart of springboot devtool
spring.devtools.restart.enabled=true

# set application logging to DEBUG to facilitate development
logging.level.com.example=DEBUG

# Disable security to allow access actuator sensitive endpoints
# (includes environment, health, beans, metrics, trace, configprops, and dump)
management.security.enabled=false
#management.endpoints.web.expose=health, info, env, metrics

#management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.include=health, info, env, metrics, bindings

# Spring Actuator Info Endpoint Configuration
management.info.git.mode=full

# Local RabbitMQ config
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.connection-timeout=60000
spring.rabbitmq.listener.acknowledge-mode=manual
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# Register with Eureka
# default to http://localhost:8761/eureka/
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

# configure this service to be in a specific zone
# so lookup to other service within same zone will be faster
eureka.instance.metadataMap.zone=zone1
eureka.client.preferSameZoneEureka=true

# force eureka dashboard to use ip address instead of hostname
# for local development during offline mode
eureka.instance.preferIpAddress=true

# speed up the frequency of heartbeat between instance and registry (use for local dev only!!!)
# In production it's probably better to stick with the default because there are some computations
# internally in the server that make assumptions about the lease renewal period.
eureka.instance.leaseRenewalIntervalInSeconds=1

# Zipkin configuration
# find Zipkin through service discovery, pass the Zipkinâ€™s service ID inside the URL
#spring.zipkin.baseUrl=http://localhost:9411
spring.zipkin.baseUrl=http://demo-zipkin-server
spring.zipkin.enabled=true
spring.zipkin.sender.type=web

# Sleuth Distributed Tracing
# configure the probability of spans exported
# override the default sampling percentage and set it to 100% to capture everything
# all incoming requests are sampled and that decision is honored downstream.
# do NOT use this for production!!!
spring.sleuth.sampler.probability=1.0

# trigger ribbon to refresh service list more frequently
# do NOT use this for production!!!
ribbon.ServerListRefreshInterval=5000